import org.jetbrains.kotlin.gradle.tasks.KotlinCompile


/**
 * VARIABLES TO CHANGE.
 */
object Variables {
    /**
     * The name of your mod. Used to create a mod folder name (and the name of your mod, if using auto-updated mod_info.json).
     */
    val modName = "My Mod"

    /**
     * Where your Starsector game is installed to.
     * Note: On Linux, if you installed Starsector into your home directory, you have to write /home/<user>/ instead of ~/
     */
    val starsectorDirectory = "C:/Program Files (x86)/Fractal Softworks/Starsector"

    // Defaults to the name of your mod, with spaces replaced by hyphens.
    val modFolderName = modName.replace(" ", "-")
}

/**
 * Modify these if you wish to have mod_info.json and the Version Checker files updated for you automatically.
 */
object AutoUpdateVariables {
    val modVersion = "1.0.0"
    val jarFileName = "My_Mod.jar"
    val modId = "yourName_uniqueid"
    val author = "Your Name"
    val description = "Mod description."
    val gameVersion = "0.95a-RC15"
    val jars = arrayOf("jars/$jarFileName")
    val modPlugin = "com.example.template.LifecyclePlugin"
    val isUtilityMod = false
    val masterVersionFile = "https://raw.githubusercontent.com/githubname/githubrepo/master/$modId.version"
    val modThreadId = "00000"
}
//////////////////////

// Note: On Linux, use "${Variables.starsectorDirectory}" as core directory
val starsectorCoreDirectory = "${Variables.starsectorDirectory}/starsector-core"
val starsectorModDirectory = "${Variables.starsectorDirectory}/mods"
val modInModsFolder = File("$starsectorModDirectory/${Variables.modFolderName}")
val modFiles = modInModsFolder.listFiles()

plugins {
    kotlin("jvm") version "1.3.60"
    java
}

version = AutoUpdateVariables.modVersion

repositories {
    maven(url = uri("$projectDir/libs"))
    jcenter()
}

dependencies {
    // Add any other library dependencies needed by copying the below line and pointing it to the location of the .jar files.
    // If using auto-generated mod_info.json, scroll down and change the "dependencies" part of mod_info.json, if you'd like dependencies to be displayed in the launcher.
    // LazyLib is needed to use Kotlin, as it provides the Kotlin Runtime
    compileOnly(fileTree("$starsectorModDirectory/LazyLib/jars") { include("*.jar") })
    //compileOnly(fileTree("$starsectorModDirectory/MagicLib/jars") { include("*.jar") })
    //compileOnly(fileTree("$starsectorModDirectory/GraphicsLib/jars") { include("*.jar") })
    //compileOnly(fileTree("$starsectorModDirectory/Console Commands/jars") { include("*.jar") })


    // Shouldn't need to change anything in dependencies below here
    implementation(fileTree("libs") { include("*.jar") })

    val kotlinVersionInLazyLib = "1.4.21"
    // Get kotlin sdk from LazyLib during runtime, only use it here during compile time
    compileOnly("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersionInLazyLib")
    compileOnly("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersionInLazyLib")

    // Vanilla Starsector jars and dependencies
    implementation(fileTree(starsectorCoreDirectory) {
        include(
            "starfarer.api.jar",
            "starfarer.api-sources.jar",
            "starfarer_obf.jar",
            "fs.common_obf.jar",
            "json.jar",
            "xstream-1.4.10.jar",
            "log4j-1.2.9.jar",
            "lwjgl.jar",
            "lwjgl_util.jar"
        )
    })
}

tasks {
    named<Jar>("jar")
    {
        destinationDirectory.set(file("$rootDir/jars"))
        archiveFileName.set(AutoUpdateVariables.jarFileName)
    }

    register("create-metadata-files") {
        val version = AutoUpdateVariables.modVersion.split(".").let { javaslang.Tuple3(it[0], it[1], it[2]) }
        System.setProperty("line.separator", "\n") // Use LF instead of CRLF like a normal person

        // Uncomment to generate a mod_info.json from the variables defined at the top of this script.
//        File(projectDir, "mod_info.json")
//            .writeText(
//                """
//                    # THIS FILE IS GENERATED BY build.gradle.kts. (Note that Starsector's json parser permits `#` for comments)
//                    {
//                        "id": "${AutoUpdateVariables.modId}",
//                        "name": "${Variables.modName}",
//                        "author": "${AutoUpdateVariables.author}",
//                        "utility": "${AutoUpdateVariables.isUtilityMod}",
//                        "version": { "major":"${version._1}", "minor": "${version._2}", "patch": "${version._3}" },
//                        "description": "${AutoUpdateVariables.description}",
//                        "gameVersion": "${AutoUpdateVariables.gameVersion}",
//                        "jars":[${AutoUpdateVariables.jars.joinToString() { "\"$it\"" }}],
//                        "modPlugin":"${AutoUpdateVariables.modPlugin}",
//                        "dependencies": [
//                            {
//                                "id": "lw_lazylib",
//                                "name": "LazyLib",
//                                # "version": "2.6" # If a specific version or higher is required, include this line
//                            }
//                        ]
//                    }
//                """.trimIndent()
//            )

        // Uncomment to generate a Version Checker csv file from the variables defined at the top of this script.
//        with(File(projectDir, "data/config/version/version_files.csv")) {
//            this.parentFile.mkdirs()
//            this.writeText(
//                """
//                    version file
//                    ${AutoUpdateVariables.modId}.version
//
//                """.trimIndent()
//            )
//        }


        // Uncomment to generate a Version Checker .version file from the variables defined at the top of this script.
//        File(projectDir, "${AutoUpdateVariables.modId}.version")
//            .writeText(
//                """
//                    # THIS FILE IS GENERATED BY build.gradle.kts.
//                    {
//                        "masterVersionFile":"${AutoUpdateVariables.masterVersionFile}",
//                        "modName":"${Variables.modName}",
//                        "modThreadId":${AutoUpdateVariables.modThreadId},
//                        "modVersion":
//                        {
//                            "major":${version._1},
//                            "minor":${version._2},
//                            "patch":${version._3}
//                        }
//                    }
//                """.trimIndent()
//            )


        with(File(projectDir, ".github/workflows/mod-folder-name.txt")) {
            this.parentFile.mkdirs()
            this.writeText(Variables.modFolderName)
        }
    }

    // If enabled, will copy your mod to the /mods directory when run (and whenever gradle syncs).
    // Disabled by default, as it is not needed if your mod directory is symlinked into your /mods folder.
    register<Copy>("install-mod") {
        val enabled = false;

        if (!enabled) return@register

        println("Installing mod into Starsector mod folder...")

        val destinations = listOf(modInModsFolder)

        destinations.forEach { dest ->
            copy {
                from(projectDir)
                into(dest)
                exclude(".git", ".github", ".gradle", ".idea", ".run", "gradle")
            }
        }
    }

}

sourceSets.main {
    java.setSrcDirs(listOf("src"))
}
kotlin.sourceSets.main {
    kotlin.setSrcDirs(listOf("src"))
    resources.setSrcDirs(listOf("data"))
}
// Compile to Java 6 bytecode so that Starsector can use it
tasks.withType<KotlinCompile> {
    kotlinOptions.jvmTarget = "1.6"
}
// Compile to Java 6 bytecode so that Starsector can use it
java {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
}